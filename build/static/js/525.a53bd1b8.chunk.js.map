{"version":3,"file":"static/js/525.a53bd1b8.chunk.js","mappings":"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","sources":["../node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/http-helpers/src/index.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-utils/src/url.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-utils/src/utils.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/basePostMessageStream.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/serializableError.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/jrpc.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-utils/src/randomId.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/jrpcEngine.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/substream.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/mux.ts","../node_modules/@toruslabs/solana-embed/node_modules/@toruslabs/openlogin-jrpc/src/postMessageStream.ts","../../../src/messages.ts","../../../src/interfaces.ts","../../../src/config.ts","../../../src/loglevel.ts","../../../src/utils.ts","../../../src/baseProvider.ts","../../../src/embedUtils.ts","../../../src/PopupHandler.ts","../../../src/communicationProvider.ts","../../../src/inPageProvider.ts","../../../src/siteMetadata.ts","../../../src/embed.ts","../node_modules/@web3auth/torus-solana-adapter/src/solanaWalletAdapter.ts","../node_modules/fast-deep-equal/index.js","../node_modules/is-stream/index.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js"],"sourcesContent":["import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        bs58.encode(signedMessage as Uint8Array),\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-throw-literal */\nimport type { SpanContext, TransactionContext } from \"@sentry/types\";\nimport merge from \"lodash.merge\";\nimport logLevel, { levels, LogLevelDesc } from \"loglevel\";\nconst log = logLevel.getLogger(\"http-helpers\");\nlog.setLevel(levels.INFO);\nexport interface CustomOptions {\n  [key: string]: unknown;\n  useAPIKey?: boolean;\n  isUrlEncodedData?: boolean;\n  timeout?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Data {}\n\nlet apiKey = \"torus-default\";\nlet embedHost = \"\";\n\n// #region API Keys\nexport const gatewayAuthHeader = \"x-api-key\";\nexport const gatewayEmbedHostHeader = \"x-embed-host\";\n\ninterface Sentry {\n  startTransaction(_: TransactionContext): {\n    startChild(a: SpanContext): {\n      finish(): void;\n    };\n    finish(): void;\n  };\n}\n\nlet sentry: Sentry | null = null;\nconst tracingOrigins: string[] = [];\nconst tracingPaths: string[] = [];\n\nexport function enableSentryTracing(_sentry: Sentry, _tracingOrigins: string[], _tracingPaths: string[]) {\n  sentry = _sentry;\n  tracingOrigins.push(..._tracingOrigins);\n  tracingPaths.push(..._tracingPaths);\n}\n\nexport function setEmbedHost(embedHost_: string): void {\n  embedHost = embedHost_;\n}\n\nexport function clearEmbedHost(): void {\n  embedHost = \"\";\n}\n\nexport function getEmbedHost(): string {\n  return embedHost;\n}\n\nexport function setAPIKey(apiKey_: string): void {\n  apiKey = apiKey_;\n}\n\nexport function clearAPIKey(): void {\n  apiKey = \"torus-default\";\n}\n\nexport function getAPIKey(): string {\n  return apiKey;\n}\n\n// #endregion\n\nexport function setLogLevel(level: LogLevelDesc) {\n  log.setLevel(level);\n}\n\nasync function fetchAndTrace(url: string, init: RequestInit): Promise<Response> {\n  let _url: URL | null = null;\n  try {\n    _url = new URL(url);\n  } catch (error) {}\n  if (sentry && _url && (tracingOrigins.includes(_url.origin) || tracingPaths.includes(_url.pathname))) {\n    const transaction = sentry.startTransaction({\n      name: url,\n    });\n    const span = transaction.startChild({\n      op: \"http\",\n    }); // This function returns a Span\n\n    const response = await fetch(url, init);\n    span.finish(); // Remember that only finished spans will be sent with the transaction\n\n    transaction.finish(); // Finishing the transaction will send it to Sentry\n\n    return response;\n  }\n\n  return fetch(url, init);\n}\nfunction getApiKeyHeaders(): Record<string, string> {\n  const headers = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nfunction debugLogResponse(response: Response) {\n  log.info(`Response: ${response.status} ${response.statusText}`);\n  log.info(`Url: ${response.url}`);\n}\n\nexport const promiseTimeout = <T>(ms: number, promise: Promise<T>): Promise<T> => {\n  const timeout = new Promise<T>((resolve, reject) => {\n    const id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new Error(`Timed out in ${ms}ms`));\n    }, ms);\n  });\n  return Promise.race<T>([promise, timeout]);\n};\n\nexport const get = async <T>(url: string, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {},\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"GET\" });\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const post = <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"POST\" });\n\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout<T>(\n    (customOptions.timeout as number) || 60000,\n    fetchAndTrace(url, options).then((response) => {\n      if (response.ok) {\n        return response.json() as Promise<T>;\n      }\n      debugLogResponse(response);\n      throw response;\n    })\n  );\n};\n\nexport const patch = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PATCH\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const put = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PUT\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const remove = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"DELETE\" });\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const generateJsonRPCObject = (method: string, parameters: unknown) => ({\n  jsonrpc: \"2.0\",\n  method,\n  id: 10,\n  params: parameters,\n});\n\nexport const promiseRace = <T>(url: string, options: RequestInit, timeout = 60000) =>\n  Promise.race([\n    get<T>(url, options),\n    new Promise<T>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"timed out\"));\n      }, timeout);\n    }),\n  ]);\n","import { HashParams } from \"./hashParams\";\n\nexport class URLWithHashParams extends URL {\n  hashParams: HashParams = new URLSearchParams();\n\n  toString(): string {\n    this.hash = this.hashParams.toString();\n    return super.toString.call(this);\n  }\n}\n","import base64urlLib from \"base64url\";\nimport keccakLib from \"keccak\";\n\nexport const base64url = base64urlLib;\n\nexport function safebtoa(str: string): string {\n  return base64url.encode(str);\n}\n\nexport function safeatob(str: string): string {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nexport const keccak = keccakLib;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport function base64toJSON(b64str: string): Record<string, unknown> {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nexport function jsonToBase64(json: Record<string, unknown>): string {\n  return base64url.encode(JSON.stringify(json));\n}\n\nexport function keccak256(str: string): string {\n  let input: string | Buffer = str;\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n  const data = `0x${keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\")}`;\n  return data;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\" | string;\n  /**\n   * - `'none'`: do not prompt user for login or consent on re-authentication\n   * - `'login'`: prompt user for re-authentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\" | string;\n  /**\n   * Maximum allowable elapsed time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be re-authenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface ExtraLoginOptions extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n","import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import randombytes from \"randombytes\";\n\nexport const randomId = (): string => randombytes(32).toString(\"hex\");\n","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import BasePostMessageStream from \"./basePostMessageStream\";\n\nexport default class PostMessageStream extends BasePostMessageStream {\n  _postMessage(data: unknown): void {\n    let originConstraint = this._targetOrigin;\n    if (typeof data === \"object\") {\n      const dataObj = data as Record<string, unknown>;\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data as Record<string, unknown>;\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0] as Record<string, unknown>;\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin as string;\n          }\n\n          // add a constraint for the response\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,"import Torus, { NetworkInterface, TorusCtorArgs, TorusLoginParams, TorusParams } from \"@toruslabs/solana-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { ITorusWalletProvider, TorusInjectedProvider } from \"@web3auth/solana-provider\";\n\nexport interface SolanaWalletOptions extends BaseAdapterSettings {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: TorusLoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n}\n\nexport class SolanaWalletAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_SOLANA;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: TorusLoginParams = {};\n\n  private solanaProvider: TorusInjectedProvider | null = null;\n\n  constructor(params: SolanaWalletOptions = {}) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      return this.solanaProvider?.provider || null;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n    const network: NetworkInterface = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus solana adapter init\");\n    await this.torusInstance.init({ showTorusButton: false, ...this.initParams, network });\n\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig as CustomChainConfig,\n      },\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      log.debug(\"initializing torus solana adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_SOLANA });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      try {\n        const torusInpageProvider = this.torusInstance.provider as unknown as ITorusWalletProvider;\n        torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n        torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n        torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n        torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n        await this.solanaProvider.setupProvider(torusInpageProvider);\n      } catch (error: unknown) {\n        // some issue in solana wallet, always connecting to mainnet on init.\n        // fallback to change network if not connected to correct one on login.\n        if (error instanceof Web3AuthError && error.code === 5010) {\n          const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n          const network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n          await this.torusInstance.setProvider(network);\n        } else {\n          throw error;\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_SOLANA, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}"],"names":["BaseSolanaAdapter","BaseAdapter","async","_","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","provider","status","ADAPTER_STATUS","WalletLoginError","chainNamespace","chainId","accounts","request","method","length","existingToken","getSavedToken","name","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","signChallenge","encodedMessage","TextEncoder","encode","signedMessage","params","message","display","verifySignedChallenge","bs58","sessionTime","clientId","web3AuthNetwork","saveToken","super","checkDisconnectionRequirements","clearToken","rehydrated","emit","ADAPTER_EVENTS","log","logLevel","setLevel","levels","apiKey","setAPIKey","apiKey_","URL","base64urlLib","keccakLib","noop","ACK","BasePostMessageStream","_inherits","target","_ref$targetWindow","targetWindow","_ref$targetOrigin","targetOrigin","_classCallCheck","_this","objectMode","_defineProperty","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_assertThisInitialized","_synIntervalId","addEventListener","_handShake","_createClass","key","value","cork","_write","data","_break","push","err","uncork","originConstraint","postMessage","event","source","_typeof","_onData","cb","_postMessage","removeEventListener","Duplex","safeApply","handler","context","args","Reflect","apply","setTimeout","arrayClone","arr","n","copy","Array","i","SafeEventEmitter","type","doError","events","_events","undefined","error","er","len","listeners","EventEmitter","SerializableError","code","Number","isInteger","stringify","stack","getRpcPromiseCallback","resolve","reject","unwrapResult","response","isArray","result","createStreamMiddleware","idMap","stream","read","write","res","_encoding","id","processNotification","Object","assign","end","processResponse","_err","middleware","req","next","createIdRemapMiddleware","_end","originalId","newId","randombytes","done","JRPCEngine","_middleware","_handleBatch","_handle","_promiseHandle","_context2","_runAllMiddleware","_this2","_yield$JRPCEngine$_ru","_yield$JRPCEngine$_ru2","middlewareError","isComplete","returnHandlers","_runReturnHandlers","handlerCallback","_context","_handleBatch2","reqs","_context3","Promise","all","map","responses","_this3","_handle2","callerReq","_context4","jsonrpc","_processRequest","serializeError","_processRequest2","_context5","_yield$JRPCEngine$_ru3","_yield$JRPCEngine$_ru4","_checkForCompletion","middlewareStack","_iterator","_context6","_runMiddleware","_yield$JRPCEngine$_ru5","_yield$JRPCEngine$_ru6","reverse","returnHandler","handlers","_iterator2","_context8","_loop","_context7","Substream","parent","_parent","chunk","callback","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","opts","arguments","_substreams","substream","_cb","once","eos","readable","writable","anyStreamEnd","_error","destroy","console","warn","disconnected","permanentlyDisconnected","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","connected","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","hostname","loglevel","getWindowId","getTorusUrl","torusUrl","buildEnv","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","_ref","w","h","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","left","abs","BaseProvider","constructor","jsonRpcStreamName","isDuplexStream","connectionStream","messages","isTorus","setMaxListeners","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","sendAsync","mux","pump","ignoreStream","jsonRpcConnection","createStream","rpcEngine","ethErrors","createLoggerMiddleware","_rpcEngine","jsonRpcConnectionEvents","send","streamName","remoteLabel","emitter","warningMsg","listenerCount","logStreamDisconnectWarning","documentReady","readyState","handle","eventName","handlerArgs","handlerWrapper","handleEvent","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","isLegacyTransactionInstance","transaction","PopupHandler","url","features","windowTimer","iClosedWindow","_setupTimer","setInterval","closed","clearInterval","open","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","config","getUserLanguage","embedTranslations","windowRefs","on","isConnected","COMMUNICATION_NOTIFICATIONS","isFullScreen","rid","_displayIframe","isFull","windowId","_createPopupBlockAlert","_handleCloseWindow","currentLoginProvider","isLoggedIn","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","info","initialized","_handleWindow","finalUrl","hash","handledWindow","style","top","right","bottom","torusWidgetVisibility","buttonPosition","hideTorusButton","showTorusButton","_payload","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","attachOnLoad","remove","children","bindOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","PROVIDER_NOTIFICATIONS","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","isLocalStorageAvailable","storage","x","setItem","removeItem","storageAvailable","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","enableLogging","network","useLocalStorage","extraParams","whiteLabel","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","body","dappMetadata","getSiteMetadata","contentWindow","_setupWeb3","topupHide","isTopupHidden","torus","handleSetup","loginProvider","login_hint","loginParams","privateKey","userInfo","success","logout","clearInit","isElement","element","Element","Document","contains","path","instanceId","finalPath","searchParams","keys","forEach","isLegacyTransaction","serialize","requireAllSignatures","Buffer","options","signature","serializeMessage","messageOnly","parsed","JSON","parse","publicKey","PublicKey","addSignature","transactions","tx","signatures","item","idx","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","login","then","catch","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","SolanaWalletAdapter","WALLET_ADAPTERS","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","torusWalletOptions","adapterSettings","initParams","loginSettings","solanaProvider","_this$solanaProvider","init","checkInitializationRequirements","blockExplorer","displayName","rpcTarget","ticker","tickerName","blockExplorerUrl","logo","torusInstance","TorusInjectedProvider","autoConnect","connect","checkConnectionRequirements","WalletInitializationError","adapter","torusInpageProvider","sendTransaction","signAllTransactions","signMessage","signTransaction","setupProvider","Web3AuthError","setProvider","reconnected","cleanup","disconnectSession","disconnect","getUserInfo","module","exports","equal","a","b","RegExp","flags","valueOf","isStream","pipe","_writableState","_read","_readableState","duplex","transform","_transform","_isNativeReflectConstruct","construct","sham","_construct","Parent","Class","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","Map","fn","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","create","enumerable","configurable"],"sourceRoot":""}